version: 2

defaults: &defaults
  working_directory: ~/desktop/desktop
  macos:
    xcode: '10.2.1'

jobs:
  build:
    <<: *defaults
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
      - run:
          name: Install dependencies
          command: yarn install --force
      - save_cache:
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - vendor/bundle
            - .eslintcache
            - ~/.electron
            - ~/Library/Caches/Yarn/v4
      - run:
          name: Linting
          command: yarn lint && yarn validate-changelog && yarn check-modified
      - run:
          name: Build
          command: yarn build:prod
      - run:
          name: Test
          command: |
            yarn test:setup
            yarn test
      - run:
          name: Report to codecov
          command: yarn test:report
          when: always
      - run:
          name: Teardown
          command:
            find $HOME/Library/Developer/Xcode/DerivedData -name
            '*.xcactivitylog' -exec cp {} $CIRCLE_ARTIFACTS/xcactivitylog \; ||
            true
      # Save test results
      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
      - persist_to_workspace:
          root: ~/desktop/desktop
          paths: .

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/desktop/desktop
      - run: yarn run publish

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: /^__release-.*/
