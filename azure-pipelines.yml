variables:
  PYTHON: 'python2.7'

trigger:
  batch: true
  branches:
    include:
      - development
      - releases/*

pr:
  autoCancel: true
  branches:
    include:
      - '*'

jobs:
  - job: Windows
    pool:
      vmImage: vs2017-win2016
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
      - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
        inputs:
          versionSpec: '1.5.1'
      - script: |
          yarn install --force
        name: Install
      - script: |
          yarn build:prod
        name: Build
      - script: |
          yarn test:setup && yarn test
        name: Test
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFiles: '**junit*.xml'
          testRunTitle: $(Agent.OS) Test Results
        condition: always()
      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage results'
        inputs:
          codeCoverageTool: 'cobertura'
          summaryFileLocation: '**/app/coverage/cobertura-coverage.xml'
        condition: always()

  - job: Linux
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libsecret-1-dev xvfb fakeroot dpkg rpm xz-utils xorriso zsync libxss1 libgconf2-4 libgtk-3-0
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
      - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
        inputs:
          versionSpec: '1.5.1'
      - script: |
          yarn install --force
        name: Install
      - script: |
          yarn build:prod
        name: Build
      - script: |
          export DISPLAY=':99.0'
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          yarn test:setup && yarn test
        name: Test
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFiles: '**junit*.xml'
          testRunTitle: $(Agent.OS) Test Results
        condition: always()
      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage results'
        inputs:
          codeCoverageTool: 'cobertura'
          summaryFileLocation: '**/app/coverage/cobertura-coverage.xml'
        condition: always()

  - job: macOS
    pool:
      vmImage: xcode9-macos10.13
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
      - script: |
          yarn install --force
        name: Install
      - script: |
          yarn build:prod
        name: Build
      - script: |
          yarn test:setup && yarn test
        name: Test
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFiles: '**junit*.xml'
          testRunTitle: $(Agent.OS) Test Results
        condition: always()
      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage results'
        inputs:
          codeCoverageTool: 'cobertura'
          summaryFileLocation: '**/app/coverage/cobertura-coverage.xml'
        condition: always()

  - job: Lint
    pool:
      vmImage: ubuntu-16.04
    steps:
      - script: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libsecret-1-dev
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
      - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
        inputs:
          versionSpec: '1.5.1'
      - script: |
          yarn install --force
        name: Install
      - script: |
          yarn lint
        name: Lint
      - script: |
          yarn check-modified
        displayName: 'Check for modified files'
